# MIT License
#
# Copyright (c) 2023 mavenplugins
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Release Drafter
on:
  workflow_call:
  #workflow_dispatch:
  #push:
  #  branches:
  #    - main
  #    - master
  #    - release/**
  #  tags:
  #    - 'v[0-9]+'
  #    - 'v[0-9]+.[0-9]+'
  #    - 'v[0-9]+.[0-9]+.[0-9]+'
  #    - 'v[0-9]+.[0-9]+.[0-9]+.[0-9]+'
  #    - 'v[0-9]+_release_notes'
  #    - 'v[0-9]+.[0-9]+_release_notes'
  #    - 'v[0-9]+.[0-9]+.[0-9]+_release_notes'
  #    - 'v[0-9]+.[0-9]+.[0-9]+.[0-9]+_release_notes'

jobs:
  detect-version:
    name: Detect version

    if: >
      github.repository_owner == 'mavenplugins'
      && !startsWith(github.event.head_commit.message , '[unleash-maven-plugin]')

    runs-on: ubuntu-latest
    concurrency: release-drafter
    permissions: {}
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: 'false'

      - id: has-pom
        run: |
          if [ -f pom.xml ]; then
            echo "status=true" >> $GITHUB_OUTPUT
          fi
          cat $GITHUB_OUTPUT

      - uses: actions/setup-java@v4
        if: steps.has-pom.outputs.status == 'true'
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'maven'

      - id: version
        if: steps.has-pom.outputs.status == 'true'
        run: |
          mvn --batch-mode --non-recursive help:evaluate -Dexpression=project.version -Doutput=target/version.txt
          V=$(cat target/version.txt)
          echo "version=${V%-SNAPSHOT}" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  update_release_draft:
    name: Update Release Draft
    runs-on: ubuntu-latest
    concurrency: release-drafter
    permissions:
      contents: write
    needs: detect-version

    steps:
      # Drafts your next Release notes as Pull Requests are merged into the default branch
      - uses: release-drafter/release-drafter@v6
        with:
          version: ${{ needs.detect-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
